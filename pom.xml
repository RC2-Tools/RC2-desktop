<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <prerequisites>
        <maven>3.6.1</maven>
    </prerequisites>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.13.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>edu.uw.cse.ifrcdemo</groupId>
    <artifactId>DisasterRelief</artifactId>
    <version>1.0-PARENTPOM</version>
    <packaging>pom</packaging>
    <name>DisasterRelief</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.install.skip>true</maven.install.skip>
        <dependencies.directory>${project.basedir}/dependencies</dependencies.directory>
        <rc2.version>1.0.19</rc2.version>

        <!-- Compile / exec -->
        <java.version>1.8</java.version>
        <!-- maven core -->
        <maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
        <maven.deploy.plugin.version>3.0.0-M1</maven.deploy.plugin.version>
        <maven.failsafe.plugin.version>3.0.0-M4</maven.failsafe.plugin.version>
        <maven.install.plugin.version>3.0.0-M1</maven.install.plugin.version>
        <maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>
        <maven.surefire.plugin.version>3.0.0-M4</maven.surefire.plugin.version>

        <!-- maven packaging -->
        <maven.jar.plugin.version>3.2.0</maven.jar.plugin.version>
        <maven.war.plugin.version>3.2.3</maven.war.plugin.version>
        <maven.source.plugin.version>3.2.1</maven.source.plugin.version>

        <!-- maven reporting -->
        <maven.javadoc.plugin.version>3.1.1</maven.javadoc.plugin.version>

        <!-- maven tools -->
        <maven.assembly.plugin.version>3.2.0</maven.assembly.plugin.version>
        <maven.dependency.plugin.version>3.1.2</maven.dependency.plugin.version>

        <!-- MojoHaus maven helper tools -->
        <exec.maven.plugin.version>1.6.0</exec.maven.plugin.version>
        <build-helper.maven.plugin.version>3.0.0</build-helper.maven.plugin.version>

        <!-- ODK Libs -->
        <org.opendatakit.version>2.1.6</org.opendatakit.version>

        <!-- Persistence -->
        <org.xerial.sqlite-jdbc.version>3.28.0</org.xerial.sqlite-jdbc.version>
        <hibernate.core.version>5.4.8.Final</hibernate.core.version>
        <javax.persistnece.api>2.2</javax.persistnece.api>
        <sqlite.dialect.version>1.0</sqlite.dialect.version>

        <!-- Logging -->
        <io.sentry.version>1.7.28</io.sentry.version>
        <commons-logging.version>1.2</commons-logging.version>

        <!-- Misc -->
        <com.sparkjava.version>2.7.2</com.sparkjava.version>
        <apache.commons-io.version>2.6</apache.commons-io.version>
        <apache.commons-lang3.version>3.6</apache.commons-lang3.version>
        <spullara.mustache.compiler.version>0.9.6</spullara.mustache.compiler.version>
        <com.openhtmltopdf.version>1.0.0</com.openhtmltopdf.version>
        <org.jsoup.version>1.11.3</org.jsoup.version>
        <net.sf.barcode4j.version>2.1</net.sf.barcode4j.version>
        <apache.avalon.framework.version>4.3.1</apache.avalon.framework.version>
        <apache.wink.wink-json4j.version>1.4</apache.wink.wink-json4j.version>
        <org.apache.poi.version>4.1.1</org.apache.poi.version>
        <io.github.soc.directories.version>11</io.github.soc.directories.version>

        <!-- Test -->
        <jacoco.version>0.8.2</jacoco.version>
    </properties>

    <modules>
        <module>SharedLib</module>
        <module>XlsxConverterServer</module>
        <module>MustacheToPdf</module>
		<module>Translations</module>
		
        <module>Download</module>
        <module>DistributionPlanning</module>
        <module>Upload</module>
        <module>Report</module>
        <module>Setup</module>
        <module>ConvertCsv</module>

    </modules>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <!-- Do not use assembly on this module and do not propagate this property -->
                <configuration>
                    <skipAssembly>true</skipAssembly>
                </configuration>
                <inherited>false</inherited>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>rc2-dist</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <!-- Most modules in this project don't need to be installed to the repository -->
                <!-- So the maven.install.skip property is set to false -->
                <!-- This parent pom, however, should be installed -->
                <!-- To get around that, set skip to false here and stop property propagation -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                </configuration>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>install-sync-endpoint</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>org.opendatakit</groupId>
                            <artifactId>sync-endpoint</artifactId>
                            <version>${org.opendatakit.version}</version>
                            <packaging>pom</packaging>
                            <file>${dependencies.directory}/sync-endpoint-${org.opendatakit.version}.pom</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-odk-rest-interface</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>org.opendatakit</groupId>
                            <artifactId>odk-rest-interface</artifactId>
                            <version>${org.opendatakit.version}</version>
                            <packaging>jar</packaging>
                            <file>${dependencies.directory}/odk-rest-interface-${org.opendatakit.version}.jar</file>
                            <javadoc>${dependencies.directory}/odk-rest-interface-${org.opendatakit.version}-javadoc.jar</javadoc>
                            <sources>${dependencies.directory}/odk-rest-interface-${org.opendatakit.version}-sources.jar</sources>
                            <pomFile>${dependencies.directory}/odk-rest-interface-${org.opendatakit.version}.pom</pomFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-sync-client</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>org.opendatakit</groupId>
                            <artifactId>sync-client</artifactId>
                            <version>${org.opendatakit.version}</version>
                            <packaging>jar</packaging>
                            <file>${dependencies.directory}/sync-client-${org.opendatakit.version}.jar</file>
                            <javadoc>${dependencies.directory}/sync-client-${org.opendatakit.version}-javadoc.jar</javadoc>
                            <sources>${dependencies.directory}/sync-client-${org.opendatakit.version}-sources.jar</sources>
                            <pomFile>${dependencies.directory}/sync-client-${org.opendatakit.version}.pom</pomFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-suitcase</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>org.opendatakit</groupId>
                            <artifactId>suitcase</artifactId>
                            <version>${org.opendatakit.version}</version>
                            <packaging>jar</packaging>
                            <file>${dependencies.directory}/suitcase-${org.opendatakit.version}.jar</file>
                            <javadoc>${dependencies.directory}/suitcase-${org.opendatakit.version}-javadoc.jar</javadoc>
                            <sources>${dependencies.directory}/suitcase-${org.opendatakit.version}-sources.jar</sources>
                            <pomFile>${dependencies.directory}/suitcase-${org.opendatakit.version}.pom</pomFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec.maven.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven.install.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper.maven.plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>analyze</id>
                            <goals>
                                <goal>analyze-only</goal>
                            </goals>
                            <configuration>
                                <failOnWarning>false</failOnWarning>
                                <outputXML>true</outputXML>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                    <configuration>
                        <forkCount>0</forkCount>
                        <additionalClasspathElements>
                            <additionalClasspathElement>${java.home}/lib/ext/jfxrt.jar</additionalClasspathElement>
                        </additionalClasspathElements>
                        <properties>
                            <configurationParameters>
                                junit.jupiter.execution.parallel.enabled = false
                            </configurationParameters>
                        </properties>
                       <!-- <argLine>-Xmx2048m</argLine> -->
                        <useSystemClassLoader>true</useSystemClassLoader>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven.deploy.plugin.version}</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin.version}</version>
                    <configuration>
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
    </dependencies>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>SharedLib</artifactId>
                <version>${rc2.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>Translations</artifactId>
                <version>${rc2.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>XlsxConverterServer</artifactId>
                <version>${rc2.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>MustacheToPdf</artifactId>
                <version>${rc2.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>DistributionPlanningBackend</artifactId>
                <version>${rc2.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>Report</artifactId>
                <version>${rc2.version}</version>
            </dependency>

            <dependency>
                <groupId>org.opendatakit</groupId>
                <artifactId>odk-rest-interface</artifactId>
                <version>${org.opendatakit.version}</version>
                <exclusions>
                    <!-- The POM in Sync Endpoint included too many dependencies -->
                    <!-- This disables pulling transitive dependencies from odk-rest-interface -->
                    <!-- This is a temporary fix until the problem is fixed in Sync Endpoint -->
                      <exclusion>
                         <groupId>*</groupId>
                         <artifactId>*</artifactId>
                     </exclusion>
                 </exclusions>
             </dependency>
             <dependency>
                 <groupId>org.opendatakit</groupId>
                 <artifactId>sync-client</artifactId>
                 <version>${org.opendatakit.version}</version>
                 <exclusions>
                     <exclusion>
                         <groupId>org.slf4j</groupId>
                         <artifactId>*</artifactId>
                     </exclusion>
                 </exclusions>
             </dependency>
             <dependency>
                 <groupId>org.opendatakit</groupId>
                 <artifactId>suitcase</artifactId>
                 <version>${org.opendatakit.version}</version>
             </dependency>

             <dependency>
                 <groupId>org.apache.commons</groupId>
                 <artifactId>commons-lang3</artifactId>
                 <version>${apache.commons-lang3.version}</version>
             </dependency>

             <dependency>
                 <groupId>org.xerial</groupId>
                 <artifactId>sqlite-jdbc</artifactId>
                 <version>${org.xerial.sqlite-jdbc.version}</version>
             </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-jpamodelgen</artifactId>
                <version>${hibernate.core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zsoltfabok</groupId>
                <artifactId>sqlite-dialect</artifactId>
                <version>${sqlite.dialect.version}</version>
            </dependency>

             <dependency>
                 <groupId>com.sparkjava</groupId>
                 <artifactId>spark-core</artifactId>
                 <version>${com.sparkjava.version}</version>
             </dependency>
             <dependency>
                 <groupId>commons-io</groupId>
                 <artifactId>commons-io</artifactId>
                 <version>${apache.commons-io.version}</version>
             </dependency>
             <dependency>
                 <groupId>com.github.spullara.mustache.java</groupId>
                 <artifactId>compiler</artifactId>
                 <version>${spullara.mustache.compiler.version}</version>
             </dependency>
             <dependency>
                 <groupId>com.openhtmltopdf</groupId>
                 <artifactId>openhtmltopdf-core</artifactId>
                 <version>${com.openhtmltopdf.version}</version>
             </dependency>
             <dependency>
                 <groupId>com.openhtmltopdf</groupId>
                 <artifactId>openhtmltopdf-pdfbox</artifactId>
                 <version>${com.openhtmltopdf.version}</version>
             </dependency>
             <dependency>
                 <groupId>com.openhtmltopdf</groupId>
                 <artifactId>openhtmltopdf-jsoup-dom-converter</artifactId>
                 <version>${com.openhtmltopdf.version}</version>
             </dependency>
             <dependency>
                 <groupId>com.openhtmltopdf</groupId>
                 <artifactId>openhtmltopdf-slf4j</artifactId>
                 <version>${com.openhtmltopdf.version}</version>
             </dependency>
             <dependency>
                 <groupId>org.jsoup</groupId>
                 <artifactId>jsoup</artifactId>
                 <version>${org.jsoup.version}</version>
             </dependency>
             <dependency>
                 <groupId>net.sf.barcode4j</groupId>
                 <artifactId>barcode4j</artifactId>
                 <version>${net.sf.barcode4j.version}</version>
                 <exclusions>
                     <exclusion>
                         <!-- groupId renamed to org.apache.avalon.framework -->
                        <groupId>avalon-framework</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.avalon.framework</groupId>
                <artifactId>avalon-framework-api</artifactId>
                <version>${apache.avalon.framework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.avalon.framework</groupId>
                <artifactId>avalon-framework-impl</artifactId>
                <version>${apache.avalon.framework.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.wink</groupId>
                <artifactId>wink-json4j</artifactId>
                <version>${apache.wink.wink-json4j.version}</version>
            </dependency>

            <dependency>
                <groupId>io.sentry</groupId>
                <artifactId>sentry</artifactId>
                <version>${io.sentry.version}</version>
            </dependency>

            <dependency>
                <groupId>io.sentry</groupId>
                <artifactId>sentry-spring</artifactId>
                <version>${io.sentry.version}</version>
            </dependency>

            <dependency>
                <groupId>io.sentry</groupId>
                <artifactId>sentry-spring-boot-starter</artifactId>
                <version>${io.sentry.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${org.apache.poi.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${org.apache.poi.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.soc</groupId>
                <artifactId>directories</artifactId>
                <version>${io.github.soc.directories.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
